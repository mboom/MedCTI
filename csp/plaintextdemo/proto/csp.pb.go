// Defines an RPC service to simulate a cryptographic services provider

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: proto/csp.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kid           uint32                 `protobuf:"varint,1,opt,name=kid,proto3" json:"kid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_proto_csp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_proto_csp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_proto_csp_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetKid() uint32 {
	if x != nil {
		return x.Kid
	}
	return 0
}

type GarbledCircuit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kid           uint32                 `protobuf:"varint,1,opt,name=kid,proto3" json:"kid,omitempty"`
	F             []byte                 `protobuf:"bytes,2,opt,name=F,proto3" json:"F,omitempty"`
	E             uint32                 `protobuf:"varint,3,opt,name=e,proto3" json:"e,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GarbledCircuit) Reset() {
	*x = GarbledCircuit{}
	mi := &file_proto_csp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GarbledCircuit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GarbledCircuit) ProtoMessage() {}

func (x *GarbledCircuit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_csp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GarbledCircuit.ProtoReflect.Descriptor instead.
func (*GarbledCircuit) Descriptor() ([]byte, []int) {
	return file_proto_csp_proto_rawDescGZIP(), []int{1}
}

func (x *GarbledCircuit) GetKid() uint32 {
	if x != nil {
		return x.Kid
	}
	return 0
}

func (x *GarbledCircuit) GetF() []byte {
	if x != nil {
		return x.F
	}
	return nil
}

func (x *GarbledCircuit) GetE() uint32 {
	if x != nil {
		return x.E
	}
	return 0
}

var File_proto_csp_proto protoreflect.FileDescriptor

const file_proto_csp_proto_rawDesc = "" +
	"\n" +
	"\x0fproto/csp.proto\x12\x05proto\x1a\x1bgoogle/protobuf/empty.proto\"\x17\n" +
	"\x03Key\x12\x10\n" +
	"\x03kid\x18\x01 \x01(\rR\x03kid\">\n" +
	"\x0eGarbledCircuit\x12\x10\n" +
	"\x03kid\x18\x01 \x01(\rR\x03kid\x12\f\n" +
	"\x01F\x18\x02 \x01(\fR\x01F\x12\f\n" +
	"\x01e\x18\x03 \x01(\rR\x01e2s\n" +
	"\x03CSP\x12<\n" +
	"\tPublishGC\x12\x15.proto.GarbledCircuit\x1a\x16.google.protobuf.Empty\"\x00\x12.\n" +
	"\aFetchGC\x12\n" +
	".proto.Key\x1a\x15.proto.GarbledCircuit\"\x00B1Z/github.com/mboom/MedCTI/csp/plaintextdemo/protob\x06proto3"

var (
	file_proto_csp_proto_rawDescOnce sync.Once
	file_proto_csp_proto_rawDescData []byte
)

func file_proto_csp_proto_rawDescGZIP() []byte {
	file_proto_csp_proto_rawDescOnce.Do(func() {
		file_proto_csp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_csp_proto_rawDesc), len(file_proto_csp_proto_rawDesc)))
	})
	return file_proto_csp_proto_rawDescData
}

var file_proto_csp_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_csp_proto_goTypes = []any{
	(*Key)(nil),            // 0: proto.Key
	(*GarbledCircuit)(nil), // 1: proto.GarbledCircuit
	(*emptypb.Empty)(nil),  // 2: google.protobuf.Empty
}
var file_proto_csp_proto_depIdxs = []int32{
	1, // 0: proto.CSP.PublishGC:input_type -> proto.GarbledCircuit
	0, // 1: proto.CSP.FetchGC:input_type -> proto.Key
	2, // 2: proto.CSP.PublishGC:output_type -> google.protobuf.Empty
	1, // 3: proto.CSP.FetchGC:output_type -> proto.GarbledCircuit
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_csp_proto_init() }
func file_proto_csp_proto_init() {
	if File_proto_csp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_csp_proto_rawDesc), len(file_proto_csp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_csp_proto_goTypes,
		DependencyIndexes: file_proto_csp_proto_depIdxs,
		MessageInfos:      file_proto_csp_proto_msgTypes,
	}.Build()
	File_proto_csp_proto = out.File
	file_proto_csp_proto_goTypes = nil
	file_proto_csp_proto_depIdxs = nil
}
